require 'nokogiri'

# Convert systems objects into xml
class XMLReportGenerator

  # @param [Object] systems the list of systems
  # @param [Object] scenario the scenario file used to generate
  # @param [Object] time the current time as a string
  def initialize(systems, scenario, time)
    @systems = systems
    @scenario = scenario
    @time = time
  end

  # outputs a XML scenario file that can be used to replay these systems
  # any randomisation that has been applied should be un-randomised in this output (compared to the original scenario file)
  # @return [Object] xml string
  def output
    ns = {
      'xmlns' => "http://www.github/cliffe/SecGen/scenario",
      'xmlns:xsi' => "http://www.w3.org/2001/XMLSchema-instance",
      'xsi:schemaLocation' => "http://www.github/cliffe/SecGen/scenario"
    }
    builder = Nokogiri::XML::Builder.new do |xml|
      xml.scenario (ns) {
        xml.comment 'This file was generated by SecGen'
        xml.comment "#{@time}"
        xml.comment "Based on a fulfilment of scenario: #{@scenario}"
        xml.comment 'You can replay the generation of these VM(s) using SecGen -s <this file> r'
        @systems.each { |system|
          xml.system {
            xml.system_name system.name
            system.module_selections.each { |selected_module|
              case selected_module.module_type
                when 'vulnerability'
                  xml.vulnerability(selected_module.attributes_for_scenario_output)
                when 'base'
                  xml.base(selected_module.attributes_for_scenario_output)
                when 'service'
                  xml.service(selected_module.attributes_for_scenario_output)
                when 'utility'
                  xml.utility(selected_module.attributes_for_scenario_output)
                when 'network'
                  xml.network(selected_module.attributes_for_scenario_output)
                else
                  puts "Unexpected module type: #{selected_module.attributes_for_scenario_output}"
                  exit
              end
            }
          }
        }

      }
    end
    builder.to_xml

  end
end
